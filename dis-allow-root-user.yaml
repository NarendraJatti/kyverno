apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"kyverno.io/v1","kind":"ClusterPolicy","metadata":{"annotations":{},"name":"disallow-root-user-pods"},"spec":{"rules":[{"match":{"resources":{"kinds":["Pod"]}},"name":"no-root-user","validate":{"message":"Running as root user is not allowed.","pattern":{"spec":{"containers":[{"securityContext":{"runAsUser":"!0"}}]}}}}],"validationFailureAction":"enforce"}}
  creationTimestamp: "2025-03-19T13:46:25Z"
  generation: 1
  name: disallow-root-user-pods
  resourceVersion: "53638"
  uid: 13a04035-af75-44ca-a53a-2d8b5e72062f
spec:
  admission: true
  background: true
  emitWarning: false
  rules:
  - match:
      resources:
        kinds:
        - Pod
    name: no-root-user
    skipBackgroundRequests: true
    validate:
      allowExistingViolations: true
      message: Running as root user is not allowed.
      pattern:
        spec:
          containers:
          - securityContext:
              runAsUser: '!0'
  validationFailureAction: enforce
status:
  autogen:
    rules:
    - match:
        resources:
          kinds:
          - DaemonSet
          - Deployment
          - Job
          - ReplicaSet
          - ReplicationController
          - StatefulSet
      name: autogen-no-root-user
      skipBackgroundRequests: true
      validate:
        allowExistingViolations: true
        message: Running as root user is not allowed.
        pattern:
          spec:
            template:
              spec:
                containers:
                - securityContext:
                    runAsUser: '!0'
    - match:
        resources:
          kinds:
          - CronJob
      name: autogen-cronjob-no-root-user
      skipBackgroundRequests: true
      validate:
        allowExistingViolations: true
        message: Running as root user is not allowed.
        pattern:
          spec:
            jobTemplate:
              spec:
                template:
                  spec:
                    containers:
                    - securityContext:
                        runAsUser: '!0'
  conditions:
  - lastTransitionTime: "2025-03-19T13:46:26Z"
    message: Ready
    reason: Succeeded
    status: "True"
    type: Ready
  rulecount:
    generate: 0
    mutate: 0
    validate: 1
    verifyimages: 0
  validatingadmissionpolicy:
    generated: false
    message: ""